package com.ragentek.homeset.audiocenter.db.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ragentek.homeset.audiocenter.db.greendao.CollectAlbum;
import com.ragentek.homeset.audiocenter.db.greendao.CollectMusic;
import com.ragentek.homeset.audiocenter.db.greendao.DownloadDBEntity;

import com.ragentek.homeset.audiocenter.db.greendao.CollectAlbumDao;
import com.ragentek.homeset.audiocenter.db.greendao.CollectMusicDao;
import com.ragentek.homeset.audiocenter.db.greendao.DownloadDBEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig collectAlbumDaoConfig;
    private final DaoConfig collectMusicDaoConfig;
    private final DaoConfig downloadDBEntityDaoConfig;

    private final CollectAlbumDao collectAlbumDao;
    private final CollectMusicDao collectMusicDao;
    private final DownloadDBEntityDao downloadDBEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        collectAlbumDaoConfig = daoConfigMap.get(CollectAlbumDao.class).clone();
        collectAlbumDaoConfig.initIdentityScope(type);

        collectMusicDaoConfig = daoConfigMap.get(CollectMusicDao.class).clone();
        collectMusicDaoConfig.initIdentityScope(type);

        downloadDBEntityDaoConfig = daoConfigMap.get(DownloadDBEntityDao.class).clone();
        downloadDBEntityDaoConfig.initIdentityScope(type);

        collectAlbumDao = new CollectAlbumDao(collectAlbumDaoConfig, this);
        collectMusicDao = new CollectMusicDao(collectMusicDaoConfig, this);
        downloadDBEntityDao = new DownloadDBEntityDao(downloadDBEntityDaoConfig, this);

        registerDao(CollectAlbum.class, collectAlbumDao);
        registerDao(CollectMusic.class, collectMusicDao);
        registerDao(DownloadDBEntity.class, downloadDBEntityDao);
    }
    
    public void clear() {
        collectAlbumDaoConfig.clearIdentityScope();
        collectMusicDaoConfig.clearIdentityScope();
        downloadDBEntityDaoConfig.clearIdentityScope();
    }

    public CollectAlbumDao getCollectAlbumDao() {
        return collectAlbumDao;
    }

    public CollectMusicDao getCollectMusicDao() {
        return collectMusicDao;
    }

    public DownloadDBEntityDao getDownloadDBEntityDao() {
        return downloadDBEntityDao;
    }

}
